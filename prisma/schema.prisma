generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  bankAccount Bank_Account[]
  profile     Profile?
  post        Post[]

  @@map("users")
}

model Post {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  contentUrl  String
  fileId      String   @unique @map("file_id")
  authorId    Int      @map("author_id")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  author User @relation(fields: [authorId], references: [id])

  @@map("posts")
}

model Profile {
  id             Int    @id @default(autoincrement())
  userId         Int    @unique @map("user_id")
  identityType   String @map("identity_type")
  identityNumber String @map("identity_number")
  address        String
  profilePicture String? @map("profile_picture")
  profilePictureId String? @unique @map("profile_picture_id")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("profiles")
}

model Bank_Account {
  id                Int      @id @default(autoincrement())
  bankName          String   @map("bank_name")
  bankAccountNumber String   @map("bank_account_number")
  balance           Float
  createdAt         DateTime @default(now()) @map("created_at")

  send    Transaction[] @relation("sentTransactions")
  receive Transaction[] @relation("receivedTransactions")

  userId Int  @map("user_id")
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("bank_accounts")
}

model Transaction {
  id              Int      @id @default(autoincrement())
  amount          Float
  transactionTime DateTime @default(now()) @map("transaction_time")

  sourceAccountId      Int @map("source_account_id")
  destinationAccountId Int @map("destination_account_id")

  sourceAccount      Bank_Account @relation("sentTransactions", fields: [sourceAccountId], references: [id], onDelete: Cascade)
  destinationAccount Bank_Account @relation("receivedTransactions", fields: [destinationAccountId], references: [id], onDelete: Cascade)

  @@map("transactions")
}
